using ParkeringsAppen;
using System.Drawing;
using System.Numerics;

namespace ParkeringsAppenTest
{
    [TestClass]
    public class ParkingLotTests
    {
        [TestMethod]
        public void FindAvailableSpotTest()
        {
            var parkingLot = new ParkingLot();

            // Fyll alla platser i parkeringshuset
            for (int i = 0; i < 25; i++)
            {
                var car = new Car("red", $"ABC{i:D3}", true); // Skapa unika bilar
                parkingLot.ParkVehicle(car, 60); // Parkera varje bil i 60 sekunder
            }

            // Försök hitta en ledig plats för en ny bil när alla platser är upptagna
            var newCar = new Car("blue", "ABC123", false);
            int result = parkingLot.FindAvailableSpot(newCar);

            // Förväntat resultat: -1 (ingen ledig plats ska finnas)
            Assert.AreEqual(-1, result, "No available spot should be found when the parking lot is full.");
        }

        [TestMethod]
        public void ShowParkedVehiclesTest()
        {
            var parkingLot = new ParkingLot();

            // Parkera ett fordon för att testa att det visas korrekt
            var car = new Car("blue", "XYZ123", false);
            parkingLot.ParkVehicle(car, 60); // Parkera bilen i 60 sekunder

            // Temporärt fånga upp Console-utmatning
            using (var sw = new StringWriter())
            {
                Console.SetOut(sw);

                // Anropa ShowParkedVehicles som skriver till konsolen
                parkingLot.ShowParkedVehicles();

                // Fånga utmatningen från konsolen
                var result = sw.ToString();

                // Kontrollera att utmatningen innehåller information om den parkerade bilen
                StringAssert.Contains(result, "Car - XYZ123 - blue - Plats 0", "The parked vehicle details should include registration number, color, and parking spot.");
            }
        }

        [TestMethod]
        public void CheckForExpiredVehiclesTest()
        {
            var parkingLot = new ParkingLot();
            var car = new Car("blue", "XYZ123", false);

            // Parkera bilen med en kort parkeringstid för att simulera utgången tid
            parkingLot.ParkVehicle(car, 1); // Parkera bilen i 1 sekund

            // Vänta tills parkeringstiden har gått ut
            System.Threading.Thread.Sleep(2000);

            // Temporärt fånga upp Console-utmatning
            using (var sw = new StringWriter())
            {
                Console.SetOut(sw);

                // Kontrollera för utgångna fordon
                parkingLot.CheckForExpiredVehicles();

                // Fånga utmatningen från konsolen
                var result = sw.ToString();

                // Kontrollera att meddelandet om en böter visas
                StringAssert.Contains(result, "XYZ123 har överstigit parkeringstiden. Bot på 500 kr.", "The output should indicate that the vehicle has been fined.");
            }
        }
    }
}